package Vistas;

import Dao.DAOImpresora;
import Dao.DAOUsuario;
import Dao.DAOUsuarioImpresora;
import Modelos.Impresora;
import Modelos.Usuario;
import Modelos.UsuarioImpresora;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author armando
 */
public class JFrmUsuarioImpresora extends javax.swing.JInternalFrame {

    Usuario u = new Usuario();
    Impresora i = new Impresora();
    UsuarioImpresora ui = new UsuarioImpresora();

    DAOUsuario daoUsuario = new DAOUsuario();
    DAOImpresora daoImpresora = new DAOImpresora();
    DAOUsuarioImpresora dao = new DAOUsuarioImpresora();

    ArrayList<Object[]> datosUsuario = new ArrayList<>();
    ArrayList<Object[]> datosImpresora = new ArrayList<>();
    //VARIABLE QUE MANEJA QUE TIPOS DE OPERACIONES SE REALIZARAN: SI VA A SER ALTA, BAJA O MODIFICACION DEL REGISTRO
    String operacion = "";
    boolean actualizar = false;
    int idimpresoraOLD = 0;

    /**
     * Creates new form JFrmUsuarioImpresora
     */
    public JFrmUsuarioImpresora() {
        setTitle("JFrmUsuarioImpresora");
        initComponents();
    }

    public void cargarUsuario() {
        DefaultTableModel modelo = (DefaultTableModel) tablaDatosUsuarioDos.getModel();
        modelo.setRowCount(0);
        datosUsuario = daoUsuario.consultar(txtCriterioUsuarioDos.getText());
        for (Object[] obj : datosUsuario) {
            modelo.addRow(obj);
        }
        this.tablaDatosUsuarioDos.setModel(modelo);
    }

    private void buscarUsuario() {
        cargarUsuario();
        BuscadorUsuario.setModal(true);
        BuscadorUsuario.setSize(540, 285);
        BuscadorUsuario.setLocationRelativeTo(this);
        BuscadorUsuario.setVisible(true);
        int fila = tablaDatosUsuarioDos.getSelectedRow();
        if (fila >= 0) {
            txtCodigoUsuario.setText(tablaDatosUsuarioDos.getValueAt(fila, 0).toString());
            txtDescripcionUsuario.setText(tablaDatosUsuarioDos.getValueAt(fila, 1).toString() + " " + tablaDatosUsuarioDos.getValueAt(fila, 2).toString());
        } else {
            txtCodigoUsuario.setText(null);
            txtDescripcionUsuario.setText(null);
        }
    }

    public void cargarImpresora() {
        DefaultTableModel modelo = (DefaultTableModel) tablaDatosImpresoraDos.getModel();
        modelo.setRowCount(0);
        datosImpresora = daoImpresora.consultar(txtCriterioImpresoraDos.getText());
        for (Object[] obj : datosImpresora) {
            modelo.addRow(obj);
        }
        this.tablaDatosImpresoraDos.setModel(modelo);
    }

    private void buscarImpresora() {
        cargarImpresora();
        BuscadorImpresora.setModal(true);
        BuscadorImpresora.setSize(540, 285);
        BuscadorImpresora.setLocationRelativeTo(this);
        BuscadorImpresora.setVisible(true);
        int fila = tablaDatosImpresoraDos.getSelectedRow();
        if (fila >= 0) {
            txtCodigoImpresora.setText(tablaDatosImpresoraDos.getValueAt(fila, 0).toString());
            txtDescripcionImpresora.setText(tablaDatosImpresoraDos.getValueAt(fila, 1).toString());
        } else {
            txtCodigoImpresora.setText(null);
            txtDescripcionImpresora.setText(null);
        }
    }

    public void limpiarCampos() {
        txtCodigoUsuario.setText(null);
        txtDescripcionUsuario.setText(null);
        txtCodigoImpresora.setText(null);
        txtDescripcionImpresora.setText(null);
        operacion = "";
        txtCodigoUsuario.grabFocus();
    }

    public void guardar(String accion) {
        //CAPTURA Y VALIDACIONES DE LOS DATOS RECIBIDOS
        String error = "";

        int idusuario = Integer.parseInt(txtCodigoUsuario.getText());
        int idimpresora = Integer.parseInt(txtCodigoImpresora.getText());

        if (idusuario == 0) {
            error += "NO PUEDE DEJAR EL CAMPO DE USUARIO VACIO.\n";
        }
        if (idimpresora == 0) {
            error += "NO PUEDE DEJAR EL CAMPO DE IMPRESORA VACIO.\n";
        }
        if (error.isEmpty()) {
            //PRIMERO SE ELIMINA PARA VOLVER A INSERTAR EN LA BASE DE DATOS
            ui.setIdusuario(idusuario);
            dao.eliminar(ui);
            //SE VUELVE A INSERTAR EN LA BASE DE DATOS
            ui.setIdusuario(idusuario);
            ui.setIdimpresora(idimpresora);
            dao.agregar(ui);
        } else {
            JOptionPane.showMessageDialog(null, error, "ERRORES", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BuscadorUsuario = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtCriterioUsuarioDos = new org.jdesktop.swingx.JXTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaDatosUsuarioDos = new javax.swing.JTable();
        BuscadorImpresora = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtCriterioImpresoraDos = new org.jdesktop.swingx.JXTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaDatosImpresoraDos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtCodigoUsuario = new org.jdesktop.swingx.JXTextField();
        txtDescripcionUsuario = new org.jdesktop.swingx.JXTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCodigoImpresora = new org.jdesktop.swingx.JXTextField();
        txtDescripcionImpresora = new org.jdesktop.swingx.JXTextField();
        btnConfirmar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setBackground(new java.awt.Color(50, 104, 151));
        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("BUSCADOR DE USUARIOS");
        jLabel8.setOpaque(true);

        txtCriterioUsuarioDos.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtCriterioUsuarioDos.setPrompt("Aqui puede ingresar los filtros para la busqueda..");
        txtCriterioUsuarioDos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCriterioUsuarioDosActionPerformed(evt);
            }
        });
        txtCriterioUsuarioDos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCriterioUsuarioDosKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCriterioUsuarioDosKeyTyped(evt);
            }
        });

        tablaDatosUsuarioDos.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tablaDatosUsuarioDos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "<html><p style=\"text-align:center\"><span style=\"color:#000066\"><span style=\"font-family:SansSerif\"><span style=\"font-size:10px\">Código</span></span></span></p></html> ", "<html><p style=\"text-align:right\"><span style=\"color:#000066\"><span style=\"font-family:SansSerif\"><span style=\"font-size:10px\">Nombre</span></span></span></p></html> ", "<html><p style=\"text-align:right\"><span style=\"color:#000066\"><span style=\"font-family:SansSerif\"><span style=\"font-size:10px\">Apellido</span></span></span></p></html> ", "<html><p style=\"text-align:right\"><span style=\"color:#000066\"><span style=\"font-family:SansSerif\"><span style=\"font-size:10px\">Cédula</span></span></span></p></html> ", "<html><p style=\"text-align:right\"><span style=\"color:#000066\"><span style=\"font-family:SansSerif\"><span style=\"font-size:10px\">Teléfono</span></span></span></p></html> ", "<html><p style=\"text-align:right\"><span style=\"color:#000066\"><span style=\"font-family:SansSerif\"><span style=\"font-size:10px\">Dirección</span></span></span></p></html> ", "<html><p style=\"text-align:right\"><span style=\"color:#000066\"><span style=\"font-family:SansSerif\"><span style=\"font-size:10px\">alias</span></span></span></p></html> ", "<html><p style=\"text-align:right\"><span style=\"color:#000066\"><span style=\"font-family:SansSerif\"><span style=\"font-size:10px\">idempresa</span></span></span></p></html> ", "<html><p style=\"text-align:right\"><span style=\"color:#000066\"><span style=\"font-family:SansSerif\"><span style=\"font-size:10px\">empresa</span></span></span></p></html> ", "<html><p style=\"text-align:right\"><span style=\"color:#000066\"><span style=\"font-family:SansSerif\"><span style=\"font-size:10px\">idsucursal</span></span></span></p></html> ", "<html><p style=\"text-align:right\"><span style=\"color:#000066\"><span style=\"font-family:SansSerif\"><span style=\"font-size:10px\">sucursal</span></span></span></p></html> "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaDatosUsuarioDos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaDatosUsuarioDosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaDatosUsuarioDos);
        if (tablaDatosUsuarioDos.getColumnModel().getColumnCount() > 0) {
            tablaDatosUsuarioDos.getColumnModel().getColumn(0).setMinWidth(60);
            tablaDatosUsuarioDos.getColumnModel().getColumn(0).setPreferredWidth(60);
            tablaDatosUsuarioDos.getColumnModel().getColumn(0).setMaxWidth(60);
            tablaDatosUsuarioDos.getColumnModel().getColumn(3).setMinWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(3).setPreferredWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(3).setMaxWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(4).setMinWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(4).setPreferredWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(4).setMaxWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(5).setMinWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(5).setPreferredWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(5).setMaxWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(6).setMinWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(6).setPreferredWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(6).setMaxWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(7).setMinWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(7).setPreferredWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(7).setMaxWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(8).setMinWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(8).setPreferredWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(8).setMaxWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(9).setMinWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(9).setPreferredWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(9).setMaxWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(10).setMinWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(10).setPreferredWidth(0);
            tablaDatosUsuarioDos.getColumnModel().getColumn(10).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCriterioUsuarioDos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCriterioUsuarioDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout BuscadorUsuarioLayout = new javax.swing.GroupLayout(BuscadorUsuario.getContentPane());
        BuscadorUsuario.getContentPane().setLayout(BuscadorUsuarioLayout);
        BuscadorUsuarioLayout.setHorizontalGroup(
            BuscadorUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BuscadorUsuarioLayout.setVerticalGroup(
            BuscadorUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setBackground(new java.awt.Color(50, 104, 151));
        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("BUSCADOR DE IMPRESORAS");
        jLabel9.setOpaque(true);

        txtCriterioImpresoraDos.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtCriterioImpresoraDos.setPrompt("Aqui puede ingresar los filtros para la busqueda..");
        txtCriterioImpresoraDos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCriterioImpresoraDosActionPerformed(evt);
            }
        });
        txtCriterioImpresoraDos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCriterioImpresoraDosKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCriterioImpresoraDosKeyTyped(evt);
            }
        });

        tablaDatosImpresoraDos.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tablaDatosImpresoraDos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "<html><p style=\"text-align:center\"><span style=\"color:#000066\"><span style=\"font-family:SansSerif\"><span style=\"font-size:10px\">Código</span></span></span></p></html> ", "<html><p style=\"text-align:right\"><span style=\"color:#000066\"><span style=\"font-family:SansSerif\"><span style=\"font-size:10px\">Descripcion</span></span></span></p></html> "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaDatosImpresoraDos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaDatosImpresoraDosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tablaDatosImpresoraDos);
        if (tablaDatosImpresoraDos.getColumnModel().getColumnCount() > 0) {
            tablaDatosImpresoraDos.getColumnModel().getColumn(0).setMinWidth(60);
            tablaDatosImpresoraDos.getColumnModel().getColumn(0).setPreferredWidth(60);
            tablaDatosImpresoraDos.getColumnModel().getColumn(0).setMaxWidth(60);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCriterioImpresoraDos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCriterioImpresoraDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout BuscadorImpresoraLayout = new javax.swing.GroupLayout(BuscadorImpresora.getContentPane());
        BuscadorImpresora.getContentPane().setLayout(BuscadorImpresoraLayout);
        BuscadorImpresoraLayout.setHorizontalGroup(
            BuscadorImpresoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BuscadorImpresoraLayout.setVerticalGroup(
            BuscadorImpresoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setClosable(true);
        setIconifiable(true);

        jPanel1.setBackground(new java.awt.Color(50, 104, 151));

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Habilitacion de Impresoras para Usuarios");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel4.setText("Usuario:");

        txtCodigoUsuario.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtCodigoUsuario.setPrompt("Cód. Usu.");
        txtCodigoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoUsuarioActionPerformed(evt);
            }
        });
        txtCodigoUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoUsuarioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoUsuarioKeyTyped(evt);
            }
        });

        txtDescripcionUsuario.setEnabled(false);
        txtDescripcionUsuario.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtDescripcionUsuario.setPrompt("Descripción o nombre del usuario...");

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel5.setText("Impresora:");

        txtCodigoImpresora.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtCodigoImpresora.setPrompt("Cód. Imp.");
        txtCodigoImpresora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoImpresoraActionPerformed(evt);
            }
        });
        txtCodigoImpresora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoImpresoraKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoImpresoraKeyTyped(evt);
            }
        });

        txtDescripcionImpresora.setEnabled(false);
        txtDescripcionImpresora.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtDescripcionImpresora.setPrompt("Descripción o nombre de la impresora...");
        txtDescripcionImpresora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionImpresoraActionPerformed(evt);
            }
        });

        btnConfirmar.setBackground(new java.awt.Color(204, 255, 255));
        btnConfirmar.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        btnConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_checked_16px_1.png"))); // NOI18N
        btnConfirmar.setText("Confirmar");
        btnConfirmar.setOpaque(false);
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(255, 204, 204));
        btnCancelar.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_cancel_16px.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setOpaque(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCodigoUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(txtCodigoImpresora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescripcionUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDescripcionImpresora, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnConfirmar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCodigoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescripcionUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCodigoImpresora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescripcionImpresora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCriterioUsuarioDosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCriterioUsuarioDosActionPerformed
        cargarUsuario();
    }//GEN-LAST:event_txtCriterioUsuarioDosActionPerformed

    private void txtCriterioUsuarioDosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCriterioUsuarioDosKeyPressed
        if (evt.VK_ESCAPE == evt.getKeyCode()) {
            txtCodigoUsuario.setText(null);
            txtDescripcionUsuario.setText(null);
            txtCodigoUsuario.grabFocus();
            BuscadorUsuario.dispose();
        }
    }//GEN-LAST:event_txtCriterioUsuarioDosKeyPressed

    private void txtCriterioUsuarioDosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCriterioUsuarioDosKeyTyped
        char c = evt.getKeyChar();
        if (Character.isLowerCase(c)) {
            evt.setKeyChar(Character.toUpperCase(c));
        }
        if (txtCriterioUsuarioDos.getText().length() == 100) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCriterioUsuarioDosKeyTyped

    private void tablaDatosUsuarioDosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDatosUsuarioDosMouseClicked
        if (evt.getClickCount() == 2) {
            if (tablaDatosUsuarioDos.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "SELECCIONE UNA FILA");
            } else {
                txtCriterioUsuarioDos.setText(null);
                BuscadorUsuario.dispose();
            }
        }
    }//GEN-LAST:event_tablaDatosUsuarioDosMouseClicked

    private void txtCodigoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoUsuarioActionPerformed
        if (txtCodigoUsuario.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "NO PUEDE DEJAR EL CAMPO DE USUARIO VACIO", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        } else {
            int idusuario = Integer.parseInt(txtCodigoUsuario.getText());
            u.setIdusuario(idusuario);
            boolean resultado = daoUsuario.consultarDatos(u);
            if (resultado == true) {
                txtDescripcionUsuario.setText(u.getNombre() + " " + u.getApellido());
                txtCodigoImpresora.grabFocus();
            } else {
                txtCodigoUsuario.setText(null);
                txtDescripcionUsuario.setText(null);
                txtCodigoUsuario.grabFocus();
            }
        }
    }//GEN-LAST:event_txtCodigoUsuarioActionPerformed

    private void txtCodigoUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoUsuarioKeyPressed
        if (evt.VK_F1 == evt.getKeyCode()) {
            buscarUsuario();
        }
    }//GEN-LAST:event_txtCodigoUsuarioKeyPressed

    private void txtCodigoUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoUsuarioKeyTyped
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
        }
        if (txtCodigoUsuario.getText().length() == 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCodigoUsuarioKeyTyped

    private void txtCodigoImpresoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoImpresoraActionPerformed
        if (txtCodigoImpresora.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "NO PUEDE DEJAR EL CAMPO DE IMPRESORA VACIO", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        } else {
            int idimpresora = Integer.parseInt(txtCodigoImpresora.getText());
            i.setIdimpresora(idimpresora);
            boolean resultado = daoImpresora.consultarDatos(i);
            System.out.println("" + actualizar);
            if (resultado == true) {
                txtDescripcionImpresora.setText(i.getDescripcion());
                btnConfirmar.grabFocus();
            } else {
                txtCodigoImpresora.setText(null);
                txtDescripcionImpresora.setText(null);
                txtCodigoImpresora.grabFocus();
            }
        }
    }//GEN-LAST:event_txtCodigoImpresoraActionPerformed

    private void txtCodigoImpresoraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoImpresoraKeyPressed
        if (evt.VK_F1 == evt.getKeyCode()) {
            buscarImpresora();
        }
    }//GEN-LAST:event_txtCodigoImpresoraKeyPressed

    private void txtCodigoImpresoraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoImpresoraKeyTyped
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
        }
        if (txtCodigoImpresora.getText().length() == 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCodigoImpresoraKeyTyped

    private void txtDescripcionImpresoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionImpresoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionImpresoraActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        int res = JOptionPane.showConfirmDialog(null, "¿ESTA SEGURO DE CONFIRMAR LOS CAMBIOS?", "ADVERTENCIA", JOptionPane.YES_NO_OPTION);
        if (res != 1) {
            guardar(operacion);
            limpiarCampos();
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        operacion = "CANCELAR";
        limpiarCampos();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtCriterioImpresoraDosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCriterioImpresoraDosActionPerformed
        cargarImpresora();
    }//GEN-LAST:event_txtCriterioImpresoraDosActionPerformed

    private void txtCriterioImpresoraDosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCriterioImpresoraDosKeyPressed
        if (evt.VK_ESCAPE == evt.getKeyCode()) {
            txtCodigoImpresora.setText(null);
            txtDescripcionImpresora.setText(null);
            txtCodigoImpresora.grabFocus();
            BuscadorImpresora.dispose();
        }
    }//GEN-LAST:event_txtCriterioImpresoraDosKeyPressed

    private void txtCriterioImpresoraDosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCriterioImpresoraDosKeyTyped
        char c = evt.getKeyChar();
        if (Character.isLowerCase(c)) {
            evt.setKeyChar(Character.toUpperCase(c));
        }
        if (txtCriterioImpresoraDos.getText().length() == 100) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCriterioImpresoraDosKeyTyped

    private void tablaDatosImpresoraDosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDatosImpresoraDosMouseClicked
        if (evt.getClickCount() == 2) {
            if (tablaDatosImpresoraDos.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "SELECCIONE UNA FILA");
            } else {
                txtCriterioImpresoraDos.setText(null);
                BuscadorImpresora.dispose();
            }
        }
    }//GEN-LAST:event_tablaDatosImpresoraDosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog BuscadorImpresora;
    private javax.swing.JDialog BuscadorUsuario;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tablaDatosImpresoraDos;
    private javax.swing.JTable tablaDatosUsuarioDos;
    private org.jdesktop.swingx.JXTextField txtCodigoImpresora;
    private org.jdesktop.swingx.JXTextField txtCodigoUsuario;
    private org.jdesktop.swingx.JXTextField txtCriterioImpresoraDos;
    private org.jdesktop.swingx.JXTextField txtCriterioUsuarioDos;
    private org.jdesktop.swingx.JXTextField txtDescripcionImpresora;
    private org.jdesktop.swingx.JXTextField txtDescripcionUsuario;
    // End of variables declaration//GEN-END:variables
}
